//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RegexTest
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ArrendamientoInmuebleEntities : DbContext
    {
        public ArrendamientoInmuebleEntities()
            : base("name=ArrendamientoInmuebleEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public DbSet<AplicacionConcepto> AplicacionConcepto { get; set; }
        public DbSet<AreaPrioridad> AreaPrioridad { get; set; }
        public DbSet<BitacoraExcepcion> BitacoraExcepcion { get; set; }
        public DbSet<BitacoraSistema> BitacoraSistema { get; set; }
        public DbSet<Cat_Indicador> Cat_Indicador { get; set; }
        public DbSet<Cat_InstitucionContratosDBCATNueva> Cat_InstitucionContratosDBCATNueva { get; set; }
        public DbSet<Cat_InstitucionContratosHistorico> Cat_InstitucionContratosHistorico { get; set; }
        public DbSet<Cat_Parametro> Cat_Parametro { get; set; }
        public DbSet<Cat_Prioridad> Cat_Prioridad { get; set; }
        public DbSet<Cat_Tabla> Cat_Tabla { get; set; }
        public DbSet<Cat_Tema> Cat_Tema { get; set; }
        public DbSet<Cat_TipoArrendamiento> Cat_TipoArrendamiento { get; set; }
        public DbSet<Cat_TipoContratacion> Cat_TipoContratacion { get; set; }
        public DbSet<Cat_TipoContrato> Cat_TipoContrato { get; set; }
        public DbSet<Cat_TipoExcepcionNormativaContrato> Cat_TipoExcepcionNormativaContrato { get; set; }
        public DbSet<Cat_TipoOcupacion> Cat_TipoOcupacion { get; set; }
        public DbSet<Cat_TipoPersonaReferencia> Cat_TipoPersonaReferencia { get; set; }
        public DbSet<Concepto> Concepto { get; set; }
        public DbSet<ConceptoAccesibilidad> ConceptoAccesibilidad { get; set; }
        public DbSet<ContratoArrto> ContratoArrto { get; set; }
        public DbSet<ContratoArrto_Historico> ContratoArrto_Historico { get; set; }
        public DbSet<ContratosArrtoRIUF> ContratosArrtoRIUF { get; set; }
        public DbSet<ContratosVigentes> ContratosVigentes { get; set; }
        public DbSet<Convenio_Modificatorio> Convenio_Modificatorio { get; set; }
        public DbSet<DatosAdicionalesDireccion> DatosAdicionalesDireccion { get; set; }
        public DbSet<DatosAdicionalesInmueble> DatosAdicionalesInmueble { get; set; }
        public DbSet<EmisionOpinonContrato> EmisionOpinonContrato { get; set; }
        public DbSet<ExcepcionNormativaContratoArrto> ExcepcionNormativaContratoArrto { get; set; }
        public DbSet<Inmueble> Inmueble { get; set; }
        public DbSet<InmuebleArrendamiento> InmuebleArrendamiento { get; set; }
        public DbSet<InmuebleNvosSinRIUF> InmuebleNvosSinRIUF { get; set; }
        public DbSet<InmuebleSinRIUF> InmuebleSinRIUF { get; set; }
        public DbSet<JustipreciacionArrto> JustipreciacionArrto { get; set; }
        public DbSet<JustipreciacionExt> JustipreciacionExt { get; set; }
        public DbSet<Movimiento> Movimiento { get; set; }
        public DbSet<NoUtiliAuditoria2019T> NoUtiliAuditoria2019T { get; set; }
        public DbSet<NoUtiliAuditoria2019TProduccion> NoUtiliAuditoria2019TProduccion { get; set; }
        public DbSet<PersonaReferencia> PersonaReferencia { get; set; }
        public DbSet<PlazasInmueble> PlazasInmueble { get; set; }
        public DbSet<Rel_ConceptoRespValor> Rel_ConceptoRespValor { get; set; }
        public DbSet<ReporteTotal> ReporteTotal { get; set; }
        public DbSet<ReporteTotal3> ReporteTotal3 { get; set; }
        public DbSet<Respuesta> Respuesta { get; set; }
        public DbSet<RespuestaConcepto> RespuestaConcepto { get; set; }
        public DbSet<RIUF> RIUF { get; set; }
        public DbSet<SelloDigital> SelloDigital { get; set; }
        public DbSet<Cat_CampoReporte> Cat_CampoReporte { get; set; }
        public DbSet<Cat_Documento> Cat_Documento { get; set; }
        public DbSet<dbcatnueva_instituciones> dbcatnueva_instituciones { get; set; }
        public DbSet<InmuebleFebreroSinRIUF> InmuebleFebreroSinRIUF { get; set; }
        public DbSet<PlazasInmueble_20171205> PlazasInmueble_20171205 { get; set; }
        public DbSet<PlazasInmuebleMod> PlazasInmuebleMod { get; set; }
        public DbSet<RepRFI_RIUF> RepRFI_RIUF { get; set; }
        public DbSet<TRADUCTOR_cat> TRADUCTOR_cat { get; set; }
        public DbSet<TraductorRUSP_INST> TraductorRUSP_INST { get; set; }
        public DbSet<TraductorRUSP_Sector> TraductorRUSP_Sector { get; set; }
        public DbSet<VW_DWH_CONTRATORIUF> VW_DWH_CONTRATORIUF { get; set; }
        public DbSet<VW_DWH_RIUF> VW_DWH_RIUF { get; set; }
        public DbSet<Vw_QlikContratoArren> Vw_QlikContratoArren { get; set; }
    
        [EdmFunction("ArrendamientoInmuebleEntities", "SPLIT")]
        public virtual IQueryable<SPLIT_Result> SPLIT(string s, string splitChar)
        {
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            var splitCharParameter = splitChar != null ?
                new ObjectParameter("splitChar", splitChar) :
                new ObjectParameter("splitChar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SPLIT_Result>("[ArrendamientoInmuebleEntities].[SPLIT](@s, @splitChar)", sParameter, splitCharParameter);
        }
    
        public virtual int ActualizaRUSP(Nullable<int> folioContrato, Nullable<int> tipoCaso)
        {
            var folioContratoParameter = folioContrato.HasValue ?
                new ObjectParameter("FolioContrato", folioContrato) :
                new ObjectParameter("FolioContrato", typeof(int));
    
            var tipoCasoParameter = tipoCaso.HasValue ?
                new ObjectParameter("TipoCaso", tipoCaso) :
                new ObjectParameter("TipoCaso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizaRUSP", folioContratoParameter, tipoCasoParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> NextFolioUnivertsal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("NextFolioUnivertsal");
        }
    
        public virtual ObjectResult<NoUtiliAuditoria2019P_Result> NoUtiliAuditoria2019P()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NoUtiliAuditoria2019P_Result>("NoUtiliAuditoria2019P");
        }
    
        public virtual int SP_ActualizaCat_ParametroRUSP(string fechaCorte)
        {
            var fechaCorteParameter = fechaCorte != null ?
                new ObjectParameter("FechaCorte", fechaCorte) :
                new ObjectParameter("FechaCorte", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ActualizaCat_ParametroRUSP", fechaCorteParameter);
        }
    
        public virtual int SP_InsertarDatosPlazaInmueble(string rFI, Nullable<int> ramo, string uR, Nullable<int> numPlazas, string operacion, string fechaUltimaActualizacion)
        {
            var rFIParameter = rFI != null ?
                new ObjectParameter("RFI", rFI) :
                new ObjectParameter("RFI", typeof(string));
    
            var ramoParameter = ramo.HasValue ?
                new ObjectParameter("Ramo", ramo) :
                new ObjectParameter("Ramo", typeof(int));
    
            var uRParameter = uR != null ?
                new ObjectParameter("UR", uR) :
                new ObjectParameter("UR", typeof(string));
    
            var numPlazasParameter = numPlazas.HasValue ?
                new ObjectParameter("NumPlazas", numPlazas) :
                new ObjectParameter("NumPlazas", typeof(int));
    
            var operacionParameter = operacion != null ?
                new ObjectParameter("Operacion", operacion) :
                new ObjectParameter("Operacion", typeof(string));
    
            var fechaUltimaActualizacionParameter = fechaUltimaActualizacion != null ?
                new ObjectParameter("FechaUltimaActualizacion", fechaUltimaActualizacion) :
                new ObjectParameter("FechaUltimaActualizacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertarDatosPlazaInmueble", rFIParameter, ramoParameter, uRParameter, numPlazasParameter, operacionParameter, fechaUltimaActualizacionParameter);
        }
    
        public virtual int SP_InsertarDatosPlazaInmuebleMod(string rFI, Nullable<int> ramo, string uR, Nullable<int> numPlazas, string operacion, string fechaUltimaActualizacion)
        {
            var rFIParameter = rFI != null ?
                new ObjectParameter("RFI", rFI) :
                new ObjectParameter("RFI", typeof(string));
    
            var ramoParameter = ramo.HasValue ?
                new ObjectParameter("Ramo", ramo) :
                new ObjectParameter("Ramo", typeof(int));
    
            var uRParameter = uR != null ?
                new ObjectParameter("UR", uR) :
                new ObjectParameter("UR", typeof(string));
    
            var numPlazasParameter = numPlazas.HasValue ?
                new ObjectParameter("NumPlazas", numPlazas) :
                new ObjectParameter("NumPlazas", typeof(int));
    
            var operacionParameter = operacion != null ?
                new ObjectParameter("Operacion", operacion) :
                new ObjectParameter("Operacion", typeof(string));
    
            var fechaUltimaActualizacionParameter = fechaUltimaActualizacion != null ?
                new ObjectParameter("FechaUltimaActualizacion", fechaUltimaActualizacion) :
                new ObjectParameter("FechaUltimaActualizacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertarDatosPlazaInmuebleMod", rFIParameter, ramoParameter, uRParameter, numPlazasParameter, operacionParameter, fechaUltimaActualizacionParameter);
        }
    
        public virtual ObjectResult<spuConsultadeTodoslosContratos_Result> spuConsultadeTodoslosContratos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuConsultadeTodoslosContratos_Result>("spuConsultadeTodoslosContratos");
        }
    
        public virtual ObjectResult<string> spuGeneraRIUF_InmuebleEstado(string nombreEstado, Nullable<byte> idEstado)
        {
            var nombreEstadoParameter = nombreEstado != null ?
                new ObjectParameter("NombreEstado", nombreEstado) :
                new ObjectParameter("NombreEstado", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spuGeneraRIUF_InmuebleEstado", nombreEstadoParameter, idEstadoParameter);
        }
    
        public virtual ObjectResult<string> spuGeneraRIUFPorEstado(Nullable<byte> idEstado, Nullable<int> fk_IdUsuarioRegistro, string cargoUsuarioRegistro)
        {
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(byte));
    
            var fk_IdUsuarioRegistroParameter = fk_IdUsuarioRegistro.HasValue ?
                new ObjectParameter("Fk_IdUsuarioRegistro", fk_IdUsuarioRegistro) :
                new ObjectParameter("Fk_IdUsuarioRegistro", typeof(int));
    
            var cargoUsuarioRegistroParameter = cargoUsuarioRegistro != null ?
                new ObjectParameter("CargoUsuarioRegistro", cargoUsuarioRegistro) :
                new ObjectParameter("CargoUsuarioRegistro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spuGeneraRIUFPorEstado", idEstadoParameter, fk_IdUsuarioRegistroParameter, cargoUsuarioRegistroParameter);
        }
    
        public virtual int spuInsertarMovimientoSAEF(Nullable<int> idAplicacionConcepto, Nullable<int> idConceptoAccesibilidad, Nullable<bool> aplica, Nullable<bool> existe, Nullable<int> cantidad, Nullable<bool> seRequiere, Nullable<bool> cumple, string observaciones, Nullable<int> idUsuario, Nullable<int> tipoGuardado, string cadena, string selloDigital, string qR)
        {
            var idAplicacionConceptoParameter = idAplicacionConcepto.HasValue ?
                new ObjectParameter("IdAplicacionConcepto", idAplicacionConcepto) :
                new ObjectParameter("IdAplicacionConcepto", typeof(int));
    
            var idConceptoAccesibilidadParameter = idConceptoAccesibilidad.HasValue ?
                new ObjectParameter("IdConceptoAccesibilidad", idConceptoAccesibilidad) :
                new ObjectParameter("IdConceptoAccesibilidad", typeof(int));
    
            var aplicaParameter = aplica.HasValue ?
                new ObjectParameter("Aplica", aplica) :
                new ObjectParameter("Aplica", typeof(bool));
    
            var existeParameter = existe.HasValue ?
                new ObjectParameter("Existe", existe) :
                new ObjectParameter("Existe", typeof(bool));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var seRequiereParameter = seRequiere.HasValue ?
                new ObjectParameter("SeRequiere", seRequiere) :
                new ObjectParameter("SeRequiere", typeof(bool));
    
            var cumpleParameter = cumple.HasValue ?
                new ObjectParameter("Cumple", cumple) :
                new ObjectParameter("Cumple", typeof(bool));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var tipoGuardadoParameter = tipoGuardado.HasValue ?
                new ObjectParameter("TipoGuardado", tipoGuardado) :
                new ObjectParameter("TipoGuardado", typeof(int));
    
            var cadenaParameter = cadena != null ?
                new ObjectParameter("Cadena", cadena) :
                new ObjectParameter("Cadena", typeof(string));
    
            var selloDigitalParameter = selloDigital != null ?
                new ObjectParameter("SelloDigital", selloDigital) :
                new ObjectParameter("SelloDigital", typeof(string));
    
            var qRParameter = qR != null ?
                new ObjectParameter("QR", qR) :
                new ObjectParameter("QR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spuInsertarMovimientoSAEF", idAplicacionConceptoParameter, idConceptoAccesibilidadParameter, aplicaParameter, existeParameter, cantidadParameter, seRequiereParameter, cumpleParameter, observacionesParameter, idUsuarioParameter, tipoGuardadoParameter, cadenaParameter, selloDigitalParameter, qRParameter);
        }
    
        public virtual int spuInsertBitocaraExcepcionAplicacion(string aplicacion, string modulo, string funcion, string usuarioRegistro, string descExcepcion)
        {
            var aplicacionParameter = aplicacion != null ?
                new ObjectParameter("Aplicacion", aplicacion) :
                new ObjectParameter("Aplicacion", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var funcionParameter = funcion != null ?
                new ObjectParameter("Funcion", funcion) :
                new ObjectParameter("Funcion", typeof(string));
    
            var usuarioRegistroParameter = usuarioRegistro != null ?
                new ObjectParameter("UsuarioRegistro", usuarioRegistro) :
                new ObjectParameter("UsuarioRegistro", typeof(string));
    
            var descExcepcionParameter = descExcepcion != null ?
                new ObjectParameter("DescExcepcion", descExcepcion) :
                new ObjectParameter("DescExcepcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spuInsertBitocaraExcepcionAplicacion", aplicacionParameter, moduloParameter, funcionParameter, usuarioRegistroParameter, descExcepcionParameter);
        }
    
        public virtual int spuInsertContratoArrto(Nullable<byte> fk_IdTipoContrato, Nullable<byte> fk_IdTipoArrendamiento, Nullable<byte> fk_IdTipoContratacion, Nullable<int> fk_IdInmuebleArrendamiento, Nullable<int> fk_NumContratoHistorico, Nullable<int> folioContratoArrtoPadre, Nullable<int> fk_IdTipoUsoInm, string otroUsoInmueble, Nullable<int> fk_IdTipoOcupacion, string otroTipoOcupacion, Nullable<int> fk_IdTipoMoneda, Nullable<int> fk_IdInstitucion, string nombreInstitucion, Nullable<System.DateTime> fechaInicioOcupacion, Nullable<System.DateTime> fechaFinOcupacion, Nullable<decimal> areaOcupadaM2, Nullable<decimal> montoPagoMensual, Nullable<decimal> montoPagoPorCajonesEstacionamiento, Nullable<decimal> cuotaMantenimiento, Nullable<decimal> ptjeImpuesto, Nullable<int> folioEmisionOpinion, string numeroDictamenExcepcionFolioSMOI, string rIUF, string observaciones, string propietarioInmueble, string funcionarioResponsable, Nullable<int> fk_IdUsuarioRegistro, string cargoUsuarioRegistro, string personaRefOIC_Cargo, string personaRefOIC_Nombre, string personaRefOIC_ApellidoPaterno, string personaRefOIC_ApellidoMaterno, string personaRefOIC_Email, string personaRefCapturista_Cargo, string personaRefCapturista_Nombre, string personaRefCapturista_ApellidoPaterno, string personaRefCapturista_ApellidoMaterno, string personaRefCapturista_Email, string secuencial_Justipreciacion, string superficieDictaminada_Justipreciacion, Nullable<System.DateTime> fechaDictamen_Justipreciacion, Nullable<decimal> montoDictaminado_Justipreciacion, string estatusAtencion, string noGenerico, string unidadMedidaSupRentableDictaminada, Nullable<bool> cuentaConDictamen, Nullable<System.DateTime> fechaDictamen, string cadenaOriginal, string selloDigital, string qR, ObjectParameter folioContrato)
        {
            var fk_IdTipoContratoParameter = fk_IdTipoContrato.HasValue ?
                new ObjectParameter("Fk_IdTipoContrato", fk_IdTipoContrato) :
                new ObjectParameter("Fk_IdTipoContrato", typeof(byte));
    
            var fk_IdTipoArrendamientoParameter = fk_IdTipoArrendamiento.HasValue ?
                new ObjectParameter("Fk_IdTipoArrendamiento", fk_IdTipoArrendamiento) :
                new ObjectParameter("Fk_IdTipoArrendamiento", typeof(byte));
    
            var fk_IdTipoContratacionParameter = fk_IdTipoContratacion.HasValue ?
                new ObjectParameter("Fk_IdTipoContratacion", fk_IdTipoContratacion) :
                new ObjectParameter("Fk_IdTipoContratacion", typeof(byte));
    
            var fk_IdInmuebleArrendamientoParameter = fk_IdInmuebleArrendamiento.HasValue ?
                new ObjectParameter("Fk_IdInmuebleArrendamiento", fk_IdInmuebleArrendamiento) :
                new ObjectParameter("Fk_IdInmuebleArrendamiento", typeof(int));
    
            var fk_NumContratoHistoricoParameter = fk_NumContratoHistorico.HasValue ?
                new ObjectParameter("Fk_NumContratoHistorico", fk_NumContratoHistorico) :
                new ObjectParameter("Fk_NumContratoHistorico", typeof(int));
    
            var folioContratoArrtoPadreParameter = folioContratoArrtoPadre.HasValue ?
                new ObjectParameter("FolioContratoArrtoPadre", folioContratoArrtoPadre) :
                new ObjectParameter("FolioContratoArrtoPadre", typeof(int));
    
            var fk_IdTipoUsoInmParameter = fk_IdTipoUsoInm.HasValue ?
                new ObjectParameter("Fk_IdTipoUsoInm", fk_IdTipoUsoInm) :
                new ObjectParameter("Fk_IdTipoUsoInm", typeof(int));
    
            var otroUsoInmuebleParameter = otroUsoInmueble != null ?
                new ObjectParameter("OtroUsoInmueble", otroUsoInmueble) :
                new ObjectParameter("OtroUsoInmueble", typeof(string));
    
            var fk_IdTipoOcupacionParameter = fk_IdTipoOcupacion.HasValue ?
                new ObjectParameter("Fk_IdTipoOcupacion", fk_IdTipoOcupacion) :
                new ObjectParameter("Fk_IdTipoOcupacion", typeof(int));
    
            var otroTipoOcupacionParameter = otroTipoOcupacion != null ?
                new ObjectParameter("OtroTipoOcupacion", otroTipoOcupacion) :
                new ObjectParameter("OtroTipoOcupacion", typeof(string));
    
            var fk_IdTipoMonedaParameter = fk_IdTipoMoneda.HasValue ?
                new ObjectParameter("Fk_IdTipoMoneda", fk_IdTipoMoneda) :
                new ObjectParameter("Fk_IdTipoMoneda", typeof(int));
    
            var fk_IdInstitucionParameter = fk_IdInstitucion.HasValue ?
                new ObjectParameter("Fk_IdInstitucion", fk_IdInstitucion) :
                new ObjectParameter("Fk_IdInstitucion", typeof(int));
    
            var nombreInstitucionParameter = nombreInstitucion != null ?
                new ObjectParameter("NombreInstitucion", nombreInstitucion) :
                new ObjectParameter("NombreInstitucion", typeof(string));
    
            var fechaInicioOcupacionParameter = fechaInicioOcupacion.HasValue ?
                new ObjectParameter("FechaInicioOcupacion", fechaInicioOcupacion) :
                new ObjectParameter("FechaInicioOcupacion", typeof(System.DateTime));
    
            var fechaFinOcupacionParameter = fechaFinOcupacion.HasValue ?
                new ObjectParameter("FechaFinOcupacion", fechaFinOcupacion) :
                new ObjectParameter("FechaFinOcupacion", typeof(System.DateTime));
    
            var areaOcupadaM2Parameter = areaOcupadaM2.HasValue ?
                new ObjectParameter("AreaOcupadaM2", areaOcupadaM2) :
                new ObjectParameter("AreaOcupadaM2", typeof(decimal));
    
            var montoPagoMensualParameter = montoPagoMensual.HasValue ?
                new ObjectParameter("MontoPagoMensual", montoPagoMensual) :
                new ObjectParameter("MontoPagoMensual", typeof(decimal));
    
            var montoPagoPorCajonesEstacionamientoParameter = montoPagoPorCajonesEstacionamiento.HasValue ?
                new ObjectParameter("MontoPagoPorCajonesEstacionamiento", montoPagoPorCajonesEstacionamiento) :
                new ObjectParameter("MontoPagoPorCajonesEstacionamiento", typeof(decimal));
    
            var cuotaMantenimientoParameter = cuotaMantenimiento.HasValue ?
                new ObjectParameter("CuotaMantenimiento", cuotaMantenimiento) :
                new ObjectParameter("CuotaMantenimiento", typeof(decimal));
    
            var ptjeImpuestoParameter = ptjeImpuesto.HasValue ?
                new ObjectParameter("PtjeImpuesto", ptjeImpuesto) :
                new ObjectParameter("PtjeImpuesto", typeof(decimal));
    
            var folioEmisionOpinionParameter = folioEmisionOpinion.HasValue ?
                new ObjectParameter("FolioEmisionOpinion", folioEmisionOpinion) :
                new ObjectParameter("FolioEmisionOpinion", typeof(int));
    
            var numeroDictamenExcepcionFolioSMOIParameter = numeroDictamenExcepcionFolioSMOI != null ?
                new ObjectParameter("NumeroDictamenExcepcionFolioSMOI", numeroDictamenExcepcionFolioSMOI) :
                new ObjectParameter("NumeroDictamenExcepcionFolioSMOI", typeof(string));
    
            var rIUFParameter = rIUF != null ?
                new ObjectParameter("RIUF", rIUF) :
                new ObjectParameter("RIUF", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var propietarioInmuebleParameter = propietarioInmueble != null ?
                new ObjectParameter("PropietarioInmueble", propietarioInmueble) :
                new ObjectParameter("PropietarioInmueble", typeof(string));
    
            var funcionarioResponsableParameter = funcionarioResponsable != null ?
                new ObjectParameter("FuncionarioResponsable", funcionarioResponsable) :
                new ObjectParameter("FuncionarioResponsable", typeof(string));
    
            var fk_IdUsuarioRegistroParameter = fk_IdUsuarioRegistro.HasValue ?
                new ObjectParameter("Fk_IdUsuarioRegistro", fk_IdUsuarioRegistro) :
                new ObjectParameter("Fk_IdUsuarioRegistro", typeof(int));
    
            var cargoUsuarioRegistroParameter = cargoUsuarioRegistro != null ?
                new ObjectParameter("CargoUsuarioRegistro", cargoUsuarioRegistro) :
                new ObjectParameter("CargoUsuarioRegistro", typeof(string));
    
            var personaRefOIC_CargoParameter = personaRefOIC_Cargo != null ?
                new ObjectParameter("PersonaRefOIC_Cargo", personaRefOIC_Cargo) :
                new ObjectParameter("PersonaRefOIC_Cargo", typeof(string));
    
            var personaRefOIC_NombreParameter = personaRefOIC_Nombre != null ?
                new ObjectParameter("PersonaRefOIC_Nombre", personaRefOIC_Nombre) :
                new ObjectParameter("PersonaRefOIC_Nombre", typeof(string));
    
            var personaRefOIC_ApellidoPaternoParameter = personaRefOIC_ApellidoPaterno != null ?
                new ObjectParameter("PersonaRefOIC_ApellidoPaterno", personaRefOIC_ApellidoPaterno) :
                new ObjectParameter("PersonaRefOIC_ApellidoPaterno", typeof(string));
    
            var personaRefOIC_ApellidoMaternoParameter = personaRefOIC_ApellidoMaterno != null ?
                new ObjectParameter("PersonaRefOIC_ApellidoMaterno", personaRefOIC_ApellidoMaterno) :
                new ObjectParameter("PersonaRefOIC_ApellidoMaterno", typeof(string));
    
            var personaRefOIC_EmailParameter = personaRefOIC_Email != null ?
                new ObjectParameter("PersonaRefOIC_Email", personaRefOIC_Email) :
                new ObjectParameter("PersonaRefOIC_Email", typeof(string));
    
            var personaRefCapturista_CargoParameter = personaRefCapturista_Cargo != null ?
                new ObjectParameter("PersonaRefCapturista_Cargo", personaRefCapturista_Cargo) :
                new ObjectParameter("PersonaRefCapturista_Cargo", typeof(string));
    
            var personaRefCapturista_NombreParameter = personaRefCapturista_Nombre != null ?
                new ObjectParameter("PersonaRefCapturista_Nombre", personaRefCapturista_Nombre) :
                new ObjectParameter("PersonaRefCapturista_Nombre", typeof(string));
    
            var personaRefCapturista_ApellidoPaternoParameter = personaRefCapturista_ApellidoPaterno != null ?
                new ObjectParameter("PersonaRefCapturista_ApellidoPaterno", personaRefCapturista_ApellidoPaterno) :
                new ObjectParameter("PersonaRefCapturista_ApellidoPaterno", typeof(string));
    
            var personaRefCapturista_ApellidoMaternoParameter = personaRefCapturista_ApellidoMaterno != null ?
                new ObjectParameter("PersonaRefCapturista_ApellidoMaterno", personaRefCapturista_ApellidoMaterno) :
                new ObjectParameter("PersonaRefCapturista_ApellidoMaterno", typeof(string));
    
            var personaRefCapturista_EmailParameter = personaRefCapturista_Email != null ?
                new ObjectParameter("PersonaRefCapturista_Email", personaRefCapturista_Email) :
                new ObjectParameter("PersonaRefCapturista_Email", typeof(string));
    
            var secuencial_JustipreciacionParameter = secuencial_Justipreciacion != null ?
                new ObjectParameter("Secuencial_Justipreciacion", secuencial_Justipreciacion) :
                new ObjectParameter("Secuencial_Justipreciacion", typeof(string));
    
            var superficieDictaminada_JustipreciacionParameter = superficieDictaminada_Justipreciacion != null ?
                new ObjectParameter("SuperficieDictaminada_Justipreciacion", superficieDictaminada_Justipreciacion) :
                new ObjectParameter("SuperficieDictaminada_Justipreciacion", typeof(string));
    
            var fechaDictamen_JustipreciacionParameter = fechaDictamen_Justipreciacion.HasValue ?
                new ObjectParameter("FechaDictamen_Justipreciacion", fechaDictamen_Justipreciacion) :
                new ObjectParameter("FechaDictamen_Justipreciacion", typeof(System.DateTime));
    
            var montoDictaminado_JustipreciacionParameter = montoDictaminado_Justipreciacion.HasValue ?
                new ObjectParameter("MontoDictaminado_Justipreciacion", montoDictaminado_Justipreciacion) :
                new ObjectParameter("MontoDictaminado_Justipreciacion", typeof(decimal));
    
            var estatusAtencionParameter = estatusAtencion != null ?
                new ObjectParameter("EstatusAtencion", estatusAtencion) :
                new ObjectParameter("EstatusAtencion", typeof(string));
    
            var noGenericoParameter = noGenerico != null ?
                new ObjectParameter("NoGenerico", noGenerico) :
                new ObjectParameter("NoGenerico", typeof(string));
    
            var unidadMedidaSupRentableDictaminadaParameter = unidadMedidaSupRentableDictaminada != null ?
                new ObjectParameter("UnidadMedidaSupRentableDictaminada", unidadMedidaSupRentableDictaminada) :
                new ObjectParameter("UnidadMedidaSupRentableDictaminada", typeof(string));
    
            var cuentaConDictamenParameter = cuentaConDictamen.HasValue ?
                new ObjectParameter("CuentaConDictamen", cuentaConDictamen) :
                new ObjectParameter("CuentaConDictamen", typeof(bool));
    
            var fechaDictamenParameter = fechaDictamen.HasValue ?
                new ObjectParameter("FechaDictamen", fechaDictamen) :
                new ObjectParameter("FechaDictamen", typeof(System.DateTime));
    
            var cadenaOriginalParameter = cadenaOriginal != null ?
                new ObjectParameter("CadenaOriginal", cadenaOriginal) :
                new ObjectParameter("CadenaOriginal", typeof(string));
    
            var selloDigitalParameter = selloDigital != null ?
                new ObjectParameter("SelloDigital", selloDigital) :
                new ObjectParameter("SelloDigital", typeof(string));
    
            var qRParameter = qR != null ?
                new ObjectParameter("QR", qR) :
                new ObjectParameter("QR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spuInsertContratoArrto", fk_IdTipoContratoParameter, fk_IdTipoArrendamientoParameter, fk_IdTipoContratacionParameter, fk_IdInmuebleArrendamientoParameter, fk_NumContratoHistoricoParameter, folioContratoArrtoPadreParameter, fk_IdTipoUsoInmParameter, otroUsoInmuebleParameter, fk_IdTipoOcupacionParameter, otroTipoOcupacionParameter, fk_IdTipoMonedaParameter, fk_IdInstitucionParameter, nombreInstitucionParameter, fechaInicioOcupacionParameter, fechaFinOcupacionParameter, areaOcupadaM2Parameter, montoPagoMensualParameter, montoPagoPorCajonesEstacionamientoParameter, cuotaMantenimientoParameter, ptjeImpuestoParameter, folioEmisionOpinionParameter, numeroDictamenExcepcionFolioSMOIParameter, rIUFParameter, observacionesParameter, propietarioInmuebleParameter, funcionarioResponsableParameter, fk_IdUsuarioRegistroParameter, cargoUsuarioRegistroParameter, personaRefOIC_CargoParameter, personaRefOIC_NombreParameter, personaRefOIC_ApellidoPaternoParameter, personaRefOIC_ApellidoMaternoParameter, personaRefOIC_EmailParameter, personaRefCapturista_CargoParameter, personaRefCapturista_NombreParameter, personaRefCapturista_ApellidoPaternoParameter, personaRefCapturista_ApellidoMaternoParameter, personaRefCapturista_EmailParameter, secuencial_JustipreciacionParameter, superficieDictaminada_JustipreciacionParameter, fechaDictamen_JustipreciacionParameter, montoDictaminado_JustipreciacionParameter, estatusAtencionParameter, noGenericoParameter, unidadMedidaSupRentableDictaminadaParameter, cuentaConDictamenParameter, fechaDictamenParameter, cadenaOriginalParameter, selloDigitalParameter, qRParameter, folioContrato);
        }
    
        public virtual int spuInsertContratoOtrasFigurasOcupacion(Nullable<int> fk_IdTipoOcupacion, string otroTipoOcupacion, Nullable<int> fk_IdInmuebleArrendamiento, Nullable<int> fk_IdTipoUsoInm, string otroUsoInmueble, Nullable<int> fk_IdTipoMoneda, Nullable<int> fk_IdInstitucion, string nombreInstitucion, Nullable<System.DateTime> fechaInicioOcupacion, Nullable<System.DateTime> fechaFinOcupacion, Nullable<decimal> areaOcupadaM2, Nullable<decimal> montoPagoMensual, Nullable<decimal> montoPagoPorCajonesEstacionamiento, Nullable<decimal> cuotaMantenimiento, Nullable<decimal> ptjeImpuesto, string rIUF, string observaciones, string propietarioInmueble, string funcionarioResponsable, Nullable<int> fk_IdUsuarioRegistro, string cargoUsuarioRegistro, string personaRefOIC_Cargo, string personaRefOIC_Nombre, string personaRefOIC_ApellidoPaterno, string personaRefOIC_ApellidoMaterno, string personaRefOIC_Email, string personaResponsableOcupacion_Cargo, string personaResponsableOcupacion_Nombre, string personaResponsableOcupacion_ApellidoPaterno, string personaResponsableOcupacion_ApellidoMaterno, string personaResponsableOcupacion_Email, string personaRefCapturista_Cargo, string personaRefCapturista_Nombre, string personaRefCapturista_ApellidoPaterno, string personaRefCapturista_ApellidoMaterno, string personaRefCapturista_Email, Nullable<bool> cuentaConDictamen, Nullable<System.DateTime> fechaDictamen, string cadenaOriginal, string selloDigital, string qR, ObjectParameter folioContrato)
        {
            var fk_IdTipoOcupacionParameter = fk_IdTipoOcupacion.HasValue ?
                new ObjectParameter("Fk_IdTipoOcupacion", fk_IdTipoOcupacion) :
                new ObjectParameter("Fk_IdTipoOcupacion", typeof(int));
    
            var otroTipoOcupacionParameter = otroTipoOcupacion != null ?
                new ObjectParameter("OtroTipoOcupacion", otroTipoOcupacion) :
                new ObjectParameter("OtroTipoOcupacion", typeof(string));
    
            var fk_IdInmuebleArrendamientoParameter = fk_IdInmuebleArrendamiento.HasValue ?
                new ObjectParameter("Fk_IdInmuebleArrendamiento", fk_IdInmuebleArrendamiento) :
                new ObjectParameter("Fk_IdInmuebleArrendamiento", typeof(int));
    
            var fk_IdTipoUsoInmParameter = fk_IdTipoUsoInm.HasValue ?
                new ObjectParameter("Fk_IdTipoUsoInm", fk_IdTipoUsoInm) :
                new ObjectParameter("Fk_IdTipoUsoInm", typeof(int));
    
            var otroUsoInmuebleParameter = otroUsoInmueble != null ?
                new ObjectParameter("OtroUsoInmueble", otroUsoInmueble) :
                new ObjectParameter("OtroUsoInmueble", typeof(string));
    
            var fk_IdTipoMonedaParameter = fk_IdTipoMoneda.HasValue ?
                new ObjectParameter("Fk_IdTipoMoneda", fk_IdTipoMoneda) :
                new ObjectParameter("Fk_IdTipoMoneda", typeof(int));
    
            var fk_IdInstitucionParameter = fk_IdInstitucion.HasValue ?
                new ObjectParameter("Fk_IdInstitucion", fk_IdInstitucion) :
                new ObjectParameter("Fk_IdInstitucion", typeof(int));
    
            var nombreInstitucionParameter = nombreInstitucion != null ?
                new ObjectParameter("NombreInstitucion", nombreInstitucion) :
                new ObjectParameter("NombreInstitucion", typeof(string));
    
            var fechaInicioOcupacionParameter = fechaInicioOcupacion.HasValue ?
                new ObjectParameter("FechaInicioOcupacion", fechaInicioOcupacion) :
                new ObjectParameter("FechaInicioOcupacion", typeof(System.DateTime));
    
            var fechaFinOcupacionParameter = fechaFinOcupacion.HasValue ?
                new ObjectParameter("FechaFinOcupacion", fechaFinOcupacion) :
                new ObjectParameter("FechaFinOcupacion", typeof(System.DateTime));
    
            var areaOcupadaM2Parameter = areaOcupadaM2.HasValue ?
                new ObjectParameter("AreaOcupadaM2", areaOcupadaM2) :
                new ObjectParameter("AreaOcupadaM2", typeof(decimal));
    
            var montoPagoMensualParameter = montoPagoMensual.HasValue ?
                new ObjectParameter("MontoPagoMensual", montoPagoMensual) :
                new ObjectParameter("MontoPagoMensual", typeof(decimal));
    
            var montoPagoPorCajonesEstacionamientoParameter = montoPagoPorCajonesEstacionamiento.HasValue ?
                new ObjectParameter("MontoPagoPorCajonesEstacionamiento", montoPagoPorCajonesEstacionamiento) :
                new ObjectParameter("MontoPagoPorCajonesEstacionamiento", typeof(decimal));
    
            var cuotaMantenimientoParameter = cuotaMantenimiento.HasValue ?
                new ObjectParameter("CuotaMantenimiento", cuotaMantenimiento) :
                new ObjectParameter("CuotaMantenimiento", typeof(decimal));
    
            var ptjeImpuestoParameter = ptjeImpuesto.HasValue ?
                new ObjectParameter("PtjeImpuesto", ptjeImpuesto) :
                new ObjectParameter("PtjeImpuesto", typeof(decimal));
    
            var rIUFParameter = rIUF != null ?
                new ObjectParameter("RIUF", rIUF) :
                new ObjectParameter("RIUF", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var propietarioInmuebleParameter = propietarioInmueble != null ?
                new ObjectParameter("PropietarioInmueble", propietarioInmueble) :
                new ObjectParameter("PropietarioInmueble", typeof(string));
    
            var funcionarioResponsableParameter = funcionarioResponsable != null ?
                new ObjectParameter("FuncionarioResponsable", funcionarioResponsable) :
                new ObjectParameter("FuncionarioResponsable", typeof(string));
    
            var fk_IdUsuarioRegistroParameter = fk_IdUsuarioRegistro.HasValue ?
                new ObjectParameter("Fk_IdUsuarioRegistro", fk_IdUsuarioRegistro) :
                new ObjectParameter("Fk_IdUsuarioRegistro", typeof(int));
    
            var cargoUsuarioRegistroParameter = cargoUsuarioRegistro != null ?
                new ObjectParameter("CargoUsuarioRegistro", cargoUsuarioRegistro) :
                new ObjectParameter("CargoUsuarioRegistro", typeof(string));
    
            var personaRefOIC_CargoParameter = personaRefOIC_Cargo != null ?
                new ObjectParameter("PersonaRefOIC_Cargo", personaRefOIC_Cargo) :
                new ObjectParameter("PersonaRefOIC_Cargo", typeof(string));
    
            var personaRefOIC_NombreParameter = personaRefOIC_Nombre != null ?
                new ObjectParameter("PersonaRefOIC_Nombre", personaRefOIC_Nombre) :
                new ObjectParameter("PersonaRefOIC_Nombre", typeof(string));
    
            var personaRefOIC_ApellidoPaternoParameter = personaRefOIC_ApellidoPaterno != null ?
                new ObjectParameter("PersonaRefOIC_ApellidoPaterno", personaRefOIC_ApellidoPaterno) :
                new ObjectParameter("PersonaRefOIC_ApellidoPaterno", typeof(string));
    
            var personaRefOIC_ApellidoMaternoParameter = personaRefOIC_ApellidoMaterno != null ?
                new ObjectParameter("PersonaRefOIC_ApellidoMaterno", personaRefOIC_ApellidoMaterno) :
                new ObjectParameter("PersonaRefOIC_ApellidoMaterno", typeof(string));
    
            var personaRefOIC_EmailParameter = personaRefOIC_Email != null ?
                new ObjectParameter("PersonaRefOIC_Email", personaRefOIC_Email) :
                new ObjectParameter("PersonaRefOIC_Email", typeof(string));
    
            var personaResponsableOcupacion_CargoParameter = personaResponsableOcupacion_Cargo != null ?
                new ObjectParameter("PersonaResponsableOcupacion_Cargo", personaResponsableOcupacion_Cargo) :
                new ObjectParameter("PersonaResponsableOcupacion_Cargo", typeof(string));
    
            var personaResponsableOcupacion_NombreParameter = personaResponsableOcupacion_Nombre != null ?
                new ObjectParameter("PersonaResponsableOcupacion_Nombre", personaResponsableOcupacion_Nombre) :
                new ObjectParameter("PersonaResponsableOcupacion_Nombre", typeof(string));
    
            var personaResponsableOcupacion_ApellidoPaternoParameter = personaResponsableOcupacion_ApellidoPaterno != null ?
                new ObjectParameter("PersonaResponsableOcupacion_ApellidoPaterno", personaResponsableOcupacion_ApellidoPaterno) :
                new ObjectParameter("PersonaResponsableOcupacion_ApellidoPaterno", typeof(string));
    
            var personaResponsableOcupacion_ApellidoMaternoParameter = personaResponsableOcupacion_ApellidoMaterno != null ?
                new ObjectParameter("PersonaResponsableOcupacion_ApellidoMaterno", personaResponsableOcupacion_ApellidoMaterno) :
                new ObjectParameter("PersonaResponsableOcupacion_ApellidoMaterno", typeof(string));
    
            var personaResponsableOcupacion_EmailParameter = personaResponsableOcupacion_Email != null ?
                new ObjectParameter("PersonaResponsableOcupacion_Email", personaResponsableOcupacion_Email) :
                new ObjectParameter("PersonaResponsableOcupacion_Email", typeof(string));
    
            var personaRefCapturista_CargoParameter = personaRefCapturista_Cargo != null ?
                new ObjectParameter("PersonaRefCapturista_Cargo", personaRefCapturista_Cargo) :
                new ObjectParameter("PersonaRefCapturista_Cargo", typeof(string));
    
            var personaRefCapturista_NombreParameter = personaRefCapturista_Nombre != null ?
                new ObjectParameter("PersonaRefCapturista_Nombre", personaRefCapturista_Nombre) :
                new ObjectParameter("PersonaRefCapturista_Nombre", typeof(string));
    
            var personaRefCapturista_ApellidoPaternoParameter = personaRefCapturista_ApellidoPaterno != null ?
                new ObjectParameter("PersonaRefCapturista_ApellidoPaterno", personaRefCapturista_ApellidoPaterno) :
                new ObjectParameter("PersonaRefCapturista_ApellidoPaterno", typeof(string));
    
            var personaRefCapturista_ApellidoMaternoParameter = personaRefCapturista_ApellidoMaterno != null ?
                new ObjectParameter("PersonaRefCapturista_ApellidoMaterno", personaRefCapturista_ApellidoMaterno) :
                new ObjectParameter("PersonaRefCapturista_ApellidoMaterno", typeof(string));
    
            var personaRefCapturista_EmailParameter = personaRefCapturista_Email != null ?
                new ObjectParameter("PersonaRefCapturista_Email", personaRefCapturista_Email) :
                new ObjectParameter("PersonaRefCapturista_Email", typeof(string));
    
            var cuentaConDictamenParameter = cuentaConDictamen.HasValue ?
                new ObjectParameter("CuentaConDictamen", cuentaConDictamen) :
                new ObjectParameter("CuentaConDictamen", typeof(bool));
    
            var fechaDictamenParameter = fechaDictamen.HasValue ?
                new ObjectParameter("FechaDictamen", fechaDictamen) :
                new ObjectParameter("FechaDictamen", typeof(System.DateTime));
    
            var cadenaOriginalParameter = cadenaOriginal != null ?
                new ObjectParameter("CadenaOriginal", cadenaOriginal) :
                new ObjectParameter("CadenaOriginal", typeof(string));
    
            var selloDigitalParameter = selloDigital != null ?
                new ObjectParameter("SelloDigital", selloDigital) :
                new ObjectParameter("SelloDigital", typeof(string));
    
            var qRParameter = qR != null ?
                new ObjectParameter("QR", qR) :
                new ObjectParameter("QR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spuInsertContratoOtrasFigurasOcupacion", fk_IdTipoOcupacionParameter, otroTipoOcupacionParameter, fk_IdInmuebleArrendamientoParameter, fk_IdTipoUsoInmParameter, otroUsoInmuebleParameter, fk_IdTipoMonedaParameter, fk_IdInstitucionParameter, nombreInstitucionParameter, fechaInicioOcupacionParameter, fechaFinOcupacionParameter, areaOcupadaM2Parameter, montoPagoMensualParameter, montoPagoPorCajonesEstacionamientoParameter, cuotaMantenimientoParameter, ptjeImpuestoParameter, rIUFParameter, observacionesParameter, propietarioInmuebleParameter, funcionarioResponsableParameter, fk_IdUsuarioRegistroParameter, cargoUsuarioRegistroParameter, personaRefOIC_CargoParameter, personaRefOIC_NombreParameter, personaRefOIC_ApellidoPaternoParameter, personaRefOIC_ApellidoMaternoParameter, personaRefOIC_EmailParameter, personaResponsableOcupacion_CargoParameter, personaResponsableOcupacion_NombreParameter, personaResponsableOcupacion_ApellidoPaternoParameter, personaResponsableOcupacion_ApellidoMaternoParameter, personaResponsableOcupacion_EmailParameter, personaRefCapturista_CargoParameter, personaRefCapturista_NombreParameter, personaRefCapturista_ApellidoPaternoParameter, personaRefCapturista_ApellidoMaternoParameter, personaRefCapturista_EmailParameter, cuentaConDictamenParameter, fechaDictamenParameter, cadenaOriginalParameter, selloDigitalParameter, qRParameter, folioContrato);
        }
    
        public virtual ObjectResult<spuInsertInmueble_Result> spuInsertInmueble(string nombrePais, Nullable<int> fk_IdPais, Nullable<int> fk_IdTipoInmueble, Nullable<int> fk_IdEstado, Nullable<int> fk_IdMunicipio, Nullable<int> fk_IdLocalidad, string otraColonia, Nullable<int> fk_IdTipoVialidad, string nombreVialidad, string numExterior, string numInterior, string codigoPostal, Nullable<decimal> geoRefLatitud, Nullable<decimal> geoRefLongitud, string nombreInmueble, string codigoPostal_Extranjero, string estado_Extranjero, string ciudad_Extranjero, string municipio_Extranjero, Nullable<int> generarRIUF, string numeroRIUF, Nullable<byte> idOtraFigura, Nullable<int> fk_IdUsuarioRegistro, string cargoUsuarioRegistro)
        {
            var nombrePaisParameter = nombrePais != null ?
                new ObjectParameter("NombrePais", nombrePais) :
                new ObjectParameter("NombrePais", typeof(string));
    
            var fk_IdPaisParameter = fk_IdPais.HasValue ?
                new ObjectParameter("Fk_IdPais", fk_IdPais) :
                new ObjectParameter("Fk_IdPais", typeof(int));
    
            var fk_IdTipoInmuebleParameter = fk_IdTipoInmueble.HasValue ?
                new ObjectParameter("Fk_IdTipoInmueble", fk_IdTipoInmueble) :
                new ObjectParameter("Fk_IdTipoInmueble", typeof(int));
    
            var fk_IdEstadoParameter = fk_IdEstado.HasValue ?
                new ObjectParameter("Fk_IdEstado", fk_IdEstado) :
                new ObjectParameter("Fk_IdEstado", typeof(int));
    
            var fk_IdMunicipioParameter = fk_IdMunicipio.HasValue ?
                new ObjectParameter("Fk_IdMunicipio", fk_IdMunicipio) :
                new ObjectParameter("Fk_IdMunicipio", typeof(int));
    
            var fk_IdLocalidadParameter = fk_IdLocalidad.HasValue ?
                new ObjectParameter("Fk_IdLocalidad", fk_IdLocalidad) :
                new ObjectParameter("Fk_IdLocalidad", typeof(int));
    
            var otraColoniaParameter = otraColonia != null ?
                new ObjectParameter("OtraColonia", otraColonia) :
                new ObjectParameter("OtraColonia", typeof(string));
    
            var fk_IdTipoVialidadParameter = fk_IdTipoVialidad.HasValue ?
                new ObjectParameter("Fk_IdTipoVialidad", fk_IdTipoVialidad) :
                new ObjectParameter("Fk_IdTipoVialidad", typeof(int));
    
            var nombreVialidadParameter = nombreVialidad != null ?
                new ObjectParameter("NombreVialidad", nombreVialidad) :
                new ObjectParameter("NombreVialidad", typeof(string));
    
            var numExteriorParameter = numExterior != null ?
                new ObjectParameter("NumExterior", numExterior) :
                new ObjectParameter("NumExterior", typeof(string));
    
            var numInteriorParameter = numInterior != null ?
                new ObjectParameter("NumInterior", numInterior) :
                new ObjectParameter("NumInterior", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var geoRefLatitudParameter = geoRefLatitud.HasValue ?
                new ObjectParameter("GeoRefLatitud", geoRefLatitud) :
                new ObjectParameter("GeoRefLatitud", typeof(decimal));
    
            var geoRefLongitudParameter = geoRefLongitud.HasValue ?
                new ObjectParameter("GeoRefLongitud", geoRefLongitud) :
                new ObjectParameter("GeoRefLongitud", typeof(decimal));
    
            var nombreInmuebleParameter = nombreInmueble != null ?
                new ObjectParameter("NombreInmueble", nombreInmueble) :
                new ObjectParameter("NombreInmueble", typeof(string));
    
            var codigoPostal_ExtranjeroParameter = codigoPostal_Extranjero != null ?
                new ObjectParameter("CodigoPostal_Extranjero", codigoPostal_Extranjero) :
                new ObjectParameter("CodigoPostal_Extranjero", typeof(string));
    
            var estado_ExtranjeroParameter = estado_Extranjero != null ?
                new ObjectParameter("Estado_Extranjero", estado_Extranjero) :
                new ObjectParameter("Estado_Extranjero", typeof(string));
    
            var ciudad_ExtranjeroParameter = ciudad_Extranjero != null ?
                new ObjectParameter("Ciudad_Extranjero", ciudad_Extranjero) :
                new ObjectParameter("Ciudad_Extranjero", typeof(string));
    
            var municipio_ExtranjeroParameter = municipio_Extranjero != null ?
                new ObjectParameter("Municipio_Extranjero", municipio_Extranjero) :
                new ObjectParameter("Municipio_Extranjero", typeof(string));
    
            var generarRIUFParameter = generarRIUF.HasValue ?
                new ObjectParameter("GenerarRIUF", generarRIUF) :
                new ObjectParameter("GenerarRIUF", typeof(int));
    
            var numeroRIUFParameter = numeroRIUF != null ?
                new ObjectParameter("NumeroRIUF", numeroRIUF) :
                new ObjectParameter("NumeroRIUF", typeof(string));
    
            var idOtraFiguraParameter = idOtraFigura.HasValue ?
                new ObjectParameter("IdOtraFigura", idOtraFigura) :
                new ObjectParameter("IdOtraFigura", typeof(byte));
    
            var fk_IdUsuarioRegistroParameter = fk_IdUsuarioRegistro.HasValue ?
                new ObjectParameter("Fk_IdUsuarioRegistro", fk_IdUsuarioRegistro) :
                new ObjectParameter("Fk_IdUsuarioRegistro", typeof(int));
    
            var cargoUsuarioRegistroParameter = cargoUsuarioRegistro != null ?
                new ObjectParameter("CargoUsuarioRegistro", cargoUsuarioRegistro) :
                new ObjectParameter("CargoUsuarioRegistro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuInsertInmueble_Result>("spuInsertInmueble", nombrePaisParameter, fk_IdPaisParameter, fk_IdTipoInmuebleParameter, fk_IdEstadoParameter, fk_IdMunicipioParameter, fk_IdLocalidadParameter, otraColoniaParameter, fk_IdTipoVialidadParameter, nombreVialidadParameter, numExteriorParameter, numInteriorParameter, codigoPostalParameter, geoRefLatitudParameter, geoRefLongitudParameter, nombreInmuebleParameter, codigoPostal_ExtranjeroParameter, estado_ExtranjeroParameter, ciudad_ExtranjeroParameter, municipio_ExtranjeroParameter, generarRIUFParameter, numeroRIUFParameter, idOtraFiguraParameter, fk_IdUsuarioRegistroParameter, cargoUsuarioRegistroParameter);
        }
    
        public virtual int spuInsertInmuebleArrendamiento(Nullable<int> fk_IdInstitucion, string nombrePais, Nullable<int> fk_IdPais, Nullable<int> fk_IdTipoInmueble, Nullable<int> fk_IdEstado, Nullable<int> fk_IdMunicipio, Nullable<int> fk_IdLocalidad, string otraColonia, Nullable<int> fk_IdTipoVialidad, string nombreVialidad, string numExterior, string numInterior, string codigoPostal, Nullable<decimal> geoRefLatitud, Nullable<decimal> geoRefLongitud, string nombreInmueble, Nullable<int> fk_IdInmueble, string codigoPostal_Extranjero, string estado_Extranjero, string ciudad_Extranjero, string municipio_Extranjero, Nullable<int> fk_IdUsuarioRegistro, string cargoUsuarioRegistro)
        {
            var fk_IdInstitucionParameter = fk_IdInstitucion.HasValue ?
                new ObjectParameter("Fk_IdInstitucion", fk_IdInstitucion) :
                new ObjectParameter("Fk_IdInstitucion", typeof(int));
    
            var nombrePaisParameter = nombrePais != null ?
                new ObjectParameter("NombrePais", nombrePais) :
                new ObjectParameter("NombrePais", typeof(string));
    
            var fk_IdPaisParameter = fk_IdPais.HasValue ?
                new ObjectParameter("Fk_IdPais", fk_IdPais) :
                new ObjectParameter("Fk_IdPais", typeof(int));
    
            var fk_IdTipoInmuebleParameter = fk_IdTipoInmueble.HasValue ?
                new ObjectParameter("Fk_IdTipoInmueble", fk_IdTipoInmueble) :
                new ObjectParameter("Fk_IdTipoInmueble", typeof(int));
    
            var fk_IdEstadoParameter = fk_IdEstado.HasValue ?
                new ObjectParameter("Fk_IdEstado", fk_IdEstado) :
                new ObjectParameter("Fk_IdEstado", typeof(int));
    
            var fk_IdMunicipioParameter = fk_IdMunicipio.HasValue ?
                new ObjectParameter("Fk_IdMunicipio", fk_IdMunicipio) :
                new ObjectParameter("Fk_IdMunicipio", typeof(int));
    
            var fk_IdLocalidadParameter = fk_IdLocalidad.HasValue ?
                new ObjectParameter("Fk_IdLocalidad", fk_IdLocalidad) :
                new ObjectParameter("Fk_IdLocalidad", typeof(int));
    
            var otraColoniaParameter = otraColonia != null ?
                new ObjectParameter("OtraColonia", otraColonia) :
                new ObjectParameter("OtraColonia", typeof(string));
    
            var fk_IdTipoVialidadParameter = fk_IdTipoVialidad.HasValue ?
                new ObjectParameter("Fk_IdTipoVialidad", fk_IdTipoVialidad) :
                new ObjectParameter("Fk_IdTipoVialidad", typeof(int));
    
            var nombreVialidadParameter = nombreVialidad != null ?
                new ObjectParameter("NombreVialidad", nombreVialidad) :
                new ObjectParameter("NombreVialidad", typeof(string));
    
            var numExteriorParameter = numExterior != null ?
                new ObjectParameter("NumExterior", numExterior) :
                new ObjectParameter("NumExterior", typeof(string));
    
            var numInteriorParameter = numInterior != null ?
                new ObjectParameter("NumInterior", numInterior) :
                new ObjectParameter("NumInterior", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var geoRefLatitudParameter = geoRefLatitud.HasValue ?
                new ObjectParameter("GeoRefLatitud", geoRefLatitud) :
                new ObjectParameter("GeoRefLatitud", typeof(decimal));
    
            var geoRefLongitudParameter = geoRefLongitud.HasValue ?
                new ObjectParameter("GeoRefLongitud", geoRefLongitud) :
                new ObjectParameter("GeoRefLongitud", typeof(decimal));
    
            var nombreInmuebleParameter = nombreInmueble != null ?
                new ObjectParameter("NombreInmueble", nombreInmueble) :
                new ObjectParameter("NombreInmueble", typeof(string));
    
            var fk_IdInmuebleParameter = fk_IdInmueble.HasValue ?
                new ObjectParameter("Fk_IdInmueble", fk_IdInmueble) :
                new ObjectParameter("Fk_IdInmueble", typeof(int));
    
            var codigoPostal_ExtranjeroParameter = codigoPostal_Extranjero != null ?
                new ObjectParameter("CodigoPostal_Extranjero", codigoPostal_Extranjero) :
                new ObjectParameter("CodigoPostal_Extranjero", typeof(string));
    
            var estado_ExtranjeroParameter = estado_Extranjero != null ?
                new ObjectParameter("Estado_Extranjero", estado_Extranjero) :
                new ObjectParameter("Estado_Extranjero", typeof(string));
    
            var ciudad_ExtranjeroParameter = ciudad_Extranjero != null ?
                new ObjectParameter("Ciudad_Extranjero", ciudad_Extranjero) :
                new ObjectParameter("Ciudad_Extranjero", typeof(string));
    
            var municipio_ExtranjeroParameter = municipio_Extranjero != null ?
                new ObjectParameter("Municipio_Extranjero", municipio_Extranjero) :
                new ObjectParameter("Municipio_Extranjero", typeof(string));
    
            var fk_IdUsuarioRegistroParameter = fk_IdUsuarioRegistro.HasValue ?
                new ObjectParameter("Fk_IdUsuarioRegistro", fk_IdUsuarioRegistro) :
                new ObjectParameter("Fk_IdUsuarioRegistro", typeof(int));
    
            var cargoUsuarioRegistroParameter = cargoUsuarioRegistro != null ?
                new ObjectParameter("CargoUsuarioRegistro", cargoUsuarioRegistro) :
                new ObjectParameter("CargoUsuarioRegistro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spuInsertInmuebleArrendamiento", fk_IdInstitucionParameter, nombrePaisParameter, fk_IdPaisParameter, fk_IdTipoInmuebleParameter, fk_IdEstadoParameter, fk_IdMunicipioParameter, fk_IdLocalidadParameter, otraColoniaParameter, fk_IdTipoVialidadParameter, nombreVialidadParameter, numExteriorParameter, numInteriorParameter, codigoPostalParameter, geoRefLatitudParameter, geoRefLongitudParameter, nombreInmuebleParameter, fk_IdInmuebleParameter, codigoPostal_ExtranjeroParameter, estado_ExtranjeroParameter, ciudad_ExtranjeroParameter, municipio_ExtranjeroParameter, fk_IdUsuarioRegistroParameter, cargoUsuarioRegistroParameter);
        }
    
        public virtual int spuInsertRespuestasAplicacionEmisionOpinion(string descTipoArrendamiento, Nullable<int> idInstitucion, Nullable<int> idUsuarioRegistro, string cargoUsuarioRegistro, string tema, string cadenaOriginal, string selloDigital, string qR, Nullable<int> idInmuebleArrendamiento, Nullable<bool> esContratoHistorico, Nullable<int> folioContrato, Nullable<int> folioSMOI, string justificacion, string folioDictamen, string fechaDictamen)
        {
            var descTipoArrendamientoParameter = descTipoArrendamiento != null ?
                new ObjectParameter("DescTipoArrendamiento", descTipoArrendamiento) :
                new ObjectParameter("DescTipoArrendamiento", typeof(string));
    
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            var idUsuarioRegistroParameter = idUsuarioRegistro.HasValue ?
                new ObjectParameter("IdUsuarioRegistro", idUsuarioRegistro) :
                new ObjectParameter("IdUsuarioRegistro", typeof(int));
    
            var cargoUsuarioRegistroParameter = cargoUsuarioRegistro != null ?
                new ObjectParameter("CargoUsuarioRegistro", cargoUsuarioRegistro) :
                new ObjectParameter("CargoUsuarioRegistro", typeof(string));
    
            var temaParameter = tema != null ?
                new ObjectParameter("Tema", tema) :
                new ObjectParameter("Tema", typeof(string));
    
            var cadenaOriginalParameter = cadenaOriginal != null ?
                new ObjectParameter("CadenaOriginal", cadenaOriginal) :
                new ObjectParameter("CadenaOriginal", typeof(string));
    
            var selloDigitalParameter = selloDigital != null ?
                new ObjectParameter("SelloDigital", selloDigital) :
                new ObjectParameter("SelloDigital", typeof(string));
    
            var qRParameter = qR != null ?
                new ObjectParameter("QR", qR) :
                new ObjectParameter("QR", typeof(string));
    
            var idInmuebleArrendamientoParameter = idInmuebleArrendamiento.HasValue ?
                new ObjectParameter("IdInmuebleArrendamiento", idInmuebleArrendamiento) :
                new ObjectParameter("IdInmuebleArrendamiento", typeof(int));
    
            var esContratoHistoricoParameter = esContratoHistorico.HasValue ?
                new ObjectParameter("EsContratoHistorico", esContratoHistorico) :
                new ObjectParameter("EsContratoHistorico", typeof(bool));
    
            var folioContratoParameter = folioContrato.HasValue ?
                new ObjectParameter("FolioContrato", folioContrato) :
                new ObjectParameter("FolioContrato", typeof(int));
    
            var folioSMOIParameter = folioSMOI.HasValue ?
                new ObjectParameter("FolioSMOI", folioSMOI) :
                new ObjectParameter("FolioSMOI", typeof(int));
    
            var justificacionParameter = justificacion != null ?
                new ObjectParameter("Justificacion", justificacion) :
                new ObjectParameter("Justificacion", typeof(string));
    
            var folioDictamenParameter = folioDictamen != null ?
                new ObjectParameter("FolioDictamen", folioDictamen) :
                new ObjectParameter("FolioDictamen", typeof(string));
    
            var fechaDictamenParameter = fechaDictamen != null ?
                new ObjectParameter("FechaDictamen", fechaDictamen) :
                new ObjectParameter("FechaDictamen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spuInsertRespuestasAplicacionEmisionOpinion", descTipoArrendamientoParameter, idInstitucionParameter, idUsuarioRegistroParameter, cargoUsuarioRegistroParameter, temaParameter, cadenaOriginalParameter, selloDigitalParameter, qRParameter, idInmuebleArrendamientoParameter, esContratoHistoricoParameter, folioContratoParameter, folioSMOIParameter, justificacionParameter, folioDictamenParameter, fechaDictamenParameter);
        }
    
        public virtual int spuInsertRespuestasTablaSMOI(Nullable<int> idInstitucion, Nullable<int> idUsuarioRegistro, string cargoUsuarioRegistro, string cadenaOriginal, string selloDigital, string qR)
        {
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            var idUsuarioRegistroParameter = idUsuarioRegistro.HasValue ?
                new ObjectParameter("IdUsuarioRegistro", idUsuarioRegistro) :
                new ObjectParameter("IdUsuarioRegistro", typeof(int));
    
            var cargoUsuarioRegistroParameter = cargoUsuarioRegistro != null ?
                new ObjectParameter("CargoUsuarioRegistro", cargoUsuarioRegistro) :
                new ObjectParameter("CargoUsuarioRegistro", typeof(string));
    
            var cadenaOriginalParameter = cadenaOriginal != null ?
                new ObjectParameter("CadenaOriginal", cadenaOriginal) :
                new ObjectParameter("CadenaOriginal", typeof(string));
    
            var selloDigitalParameter = selloDigital != null ?
                new ObjectParameter("SelloDigital", selloDigital) :
                new ObjectParameter("SelloDigital", typeof(string));
    
            var qRParameter = qR != null ?
                new ObjectParameter("QR", qR) :
                new ObjectParameter("QR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spuInsertRespuestasTablaSMOI", idInstitucionParameter, idUsuarioRegistroParameter, cargoUsuarioRegistroParameter, cadenaOriginalParameter, selloDigitalParameter, qRParameter);
        }
    
        public virtual ObjectResult<spuObtenerAcuseCuerpoSAEF_Result> spuObtenerAcuseCuerpoSAEF(Nullable<int> idAplicacionConcepto)
        {
            var idAplicacionConceptoParameter = idAplicacionConcepto.HasValue ?
                new ObjectParameter("IdAplicacionConcepto", idAplicacionConcepto) :
                new ObjectParameter("IdAplicacionConcepto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuObtenerAcuseCuerpoSAEF_Result>("spuObtenerAcuseCuerpoSAEF", idAplicacionConceptoParameter);
        }
    
        public virtual ObjectResult<spuObtenerAcuseHeaderSelloSAEF_Result> spuObtenerAcuseHeaderSelloSAEF(Nullable<int> idAplicacionConcepto)
        {
            var idAplicacionConceptoParameter = idAplicacionConcepto.HasValue ?
                new ObjectParameter("IdAplicacionConcepto", idAplicacionConcepto) :
                new ObjectParameter("IdAplicacionConcepto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuObtenerAcuseHeaderSelloSAEF_Result>("spuObtenerAcuseHeaderSelloSAEF", idAplicacionConceptoParameter);
        }
    
        public virtual ObjectResult<spuObtenerEmisionOpinion_Result> spuObtenerEmisionOpinion(string folioEmision)
        {
            var folioEmisionParameter = folioEmision != null ?
                new ObjectParameter("FolioEmision", folioEmision) :
                new ObjectParameter("FolioEmision", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuObtenerEmisionOpinion_Result>("spuObtenerEmisionOpinion", folioEmisionParameter);
        }
    
        public virtual ObjectResult<spuObtenerFundamentoLegalXCptoNumOrden_Result> spuObtenerFundamentoLegalXCptoNumOrden(Nullable<byte> idTema, Nullable<decimal> numOrdenCpto)
        {
            var idTemaParameter = idTema.HasValue ?
                new ObjectParameter("IdTema", idTema) :
                new ObjectParameter("IdTema", typeof(byte));
    
            var numOrdenCptoParameter = numOrdenCpto.HasValue ?
                new ObjectParameter("NumOrdenCpto", numOrdenCpto) :
                new ObjectParameter("NumOrdenCpto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuObtenerFundamentoLegalXCptoNumOrden_Result>("spuObtenerFundamentoLegalXCptoNumOrden", idTemaParameter, numOrdenCptoParameter);
        }
    
        public virtual ObjectResult<spuObtenerInmueblesConvenioModificatorio_Result> spuObtenerInmueblesConvenioModificatorio(Nullable<int> idInstitucion, Nullable<int> folioContrato, string rIUF, Nullable<int> idPais, Nullable<int> idEstado, Nullable<int> idMunicipio)
        {
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            var folioContratoParameter = folioContrato.HasValue ?
                new ObjectParameter("FolioContrato", folioContrato) :
                new ObjectParameter("FolioContrato", typeof(int));
    
            var rIUFParameter = rIUF != null ?
                new ObjectParameter("RIUF", rIUF) :
                new ObjectParameter("RIUF", typeof(string));
    
            var idPaisParameter = idPais.HasValue ?
                new ObjectParameter("IdPais", idPais) :
                new ObjectParameter("IdPais", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            var idMunicipioParameter = idMunicipio.HasValue ?
                new ObjectParameter("IdMunicipio", idMunicipio) :
                new ObjectParameter("IdMunicipio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuObtenerInmueblesConvenioModificatorio_Result>("spuObtenerInmueblesConvenioModificatorio", idInstitucionParameter, folioContratoParameter, rIUFParameter, idPaisParameter, idEstadoParameter, idMunicipioParameter);
        }
    
        public virtual ObjectResult<spuObtenerSMOIfolio_Result> spuObtenerSMOIfolio(Nullable<int> folio)
        {
            var folioParameter = folio.HasValue ?
                new ObjectParameter("Folio", folio) :
                new ObjectParameter("Folio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuObtenerSMOIfolio_Result>("spuObtenerSMOIfolio", folioParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> spuObtenerSupTotalM2SMOIxIdFolio(Nullable<int> idFolioAplicacionCpto, Nullable<int> idInstitucion)
        {
            var idFolioAplicacionCptoParameter = idFolioAplicacionCpto.HasValue ?
                new ObjectParameter("IdFolioAplicacionCpto", idFolioAplicacionCpto) :
                new ObjectParameter("IdFolioAplicacionCpto", typeof(int));
    
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("spuObtenerSupTotalM2SMOIxIdFolio", idFolioAplicacionCptoParameter, idInstitucionParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> spuObtenerSupTotalM2SMOIxIdFolioSinOcupar(Nullable<int> idFolioAplicacionCpto, Nullable<int> idInstitucion)
        {
            var idFolioAplicacionCptoParameter = idFolioAplicacionCpto.HasValue ?
                new ObjectParameter("IdFolioAplicacionCpto", idFolioAplicacionCpto) :
                new ObjectParameter("IdFolioAplicacionCpto", typeof(int));
    
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("spuObtenerSupTotalM2SMOIxIdFolioSinOcupar", idFolioAplicacionCptoParameter, idInstitucionParameter);
        }
    
        public virtual ObjectResult<string> spuObtenerValorParametro(string parametroNombre)
        {
            var parametroNombreParameter = parametroNombre != null ?
                new ObjectParameter("ParametroNombre", parametroNombre) :
                new ObjectParameter("ParametroNombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spuObtenerValorParametro", parametroNombreParameter);
        }
    
        public virtual ObjectResult<spuPaginandoSelectTabla_Result> spuPaginandoSelectTabla(Nullable<int> pageSize, Nullable<int> pageNumber)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuPaginandoSelectTabla_Result>("spuPaginandoSelectTabla", pageSizeParameter, pageNumberParameter);
        }
    
        public virtual int spuSelecInformacionRIUFHabilitaroDeshabilitar(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> fk_IdInstitucion, string rIUF, Nullable<int> fk_IdPais, Nullable<int> fk_IdEstado, Nullable<int> fK_IdMunicipio, string codigoPostal, Nullable<int> tipoRegistro, Nullable<int> habilitaroDeshabilitar, Nullable<int> folioContrato)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var fk_IdInstitucionParameter = fk_IdInstitucion.HasValue ?
                new ObjectParameter("Fk_IdInstitucion", fk_IdInstitucion) :
                new ObjectParameter("Fk_IdInstitucion", typeof(int));
    
            var rIUFParameter = rIUF != null ?
                new ObjectParameter("RIUF", rIUF) :
                new ObjectParameter("RIUF", typeof(string));
    
            var fk_IdPaisParameter = fk_IdPais.HasValue ?
                new ObjectParameter("Fk_IdPais", fk_IdPais) :
                new ObjectParameter("Fk_IdPais", typeof(int));
    
            var fk_IdEstadoParameter = fk_IdEstado.HasValue ?
                new ObjectParameter("Fk_IdEstado", fk_IdEstado) :
                new ObjectParameter("Fk_IdEstado", typeof(int));
    
            var fK_IdMunicipioParameter = fK_IdMunicipio.HasValue ?
                new ObjectParameter("FK_IdMunicipio", fK_IdMunicipio) :
                new ObjectParameter("FK_IdMunicipio", typeof(int));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var tipoRegistroParameter = tipoRegistro.HasValue ?
                new ObjectParameter("TipoRegistro", tipoRegistro) :
                new ObjectParameter("TipoRegistro", typeof(int));
    
            var habilitaroDeshabilitarParameter = habilitaroDeshabilitar.HasValue ?
                new ObjectParameter("HabilitaroDeshabilitar", habilitaroDeshabilitar) :
                new ObjectParameter("HabilitaroDeshabilitar", typeof(int));
    
            var folioContratoParameter = folioContrato.HasValue ?
                new ObjectParameter("FolioContrato", folioContrato) :
                new ObjectParameter("FolioContrato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spuSelecInformacionRIUFHabilitaroDeshabilitar", fechaInicioParameter, fechaFinParameter, fk_IdInstitucionParameter, rIUFParameter, fk_IdPaisParameter, fk_IdEstadoParameter, fK_IdMunicipioParameter, codigoPostalParameter, tipoRegistroParameter, habilitaroDeshabilitarParameter, folioContratoParameter);
        }
    
        public virtual int spuSelecInformacionRusp(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string sector, string institucion, Nullable<int> estatusInmueble, Nullable<int> ramo, string uR, string rFIRIUF, Nullable<int> estado, Nullable<int> estatusAprovechamiento, Nullable<int> idUsoGenerico, string idUsoEspecifico, Nullable<int> pais, Nullable<int> tipoInmueble)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("Sector", sector) :
                new ObjectParameter("Sector", typeof(string));
    
            var institucionParameter = institucion != null ?
                new ObjectParameter("Institucion", institucion) :
                new ObjectParameter("Institucion", typeof(string));
    
            var estatusInmuebleParameter = estatusInmueble.HasValue ?
                new ObjectParameter("EstatusInmueble", estatusInmueble) :
                new ObjectParameter("EstatusInmueble", typeof(int));
    
            var ramoParameter = ramo.HasValue ?
                new ObjectParameter("Ramo", ramo) :
                new ObjectParameter("Ramo", typeof(int));
    
            var uRParameter = uR != null ?
                new ObjectParameter("UR", uR) :
                new ObjectParameter("UR", typeof(string));
    
            var rFIRIUFParameter = rFIRIUF != null ?
                new ObjectParameter("RFIRIUF", rFIRIUF) :
                new ObjectParameter("RFIRIUF", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var estatusAprovechamientoParameter = estatusAprovechamiento.HasValue ?
                new ObjectParameter("EstatusAprovechamiento", estatusAprovechamiento) :
                new ObjectParameter("EstatusAprovechamiento", typeof(int));
    
            var idUsoGenericoParameter = idUsoGenerico.HasValue ?
                new ObjectParameter("IdUsoGenerico", idUsoGenerico) :
                new ObjectParameter("IdUsoGenerico", typeof(int));
    
            var idUsoEspecificoParameter = idUsoEspecifico != null ?
                new ObjectParameter("IdUsoEspecifico", idUsoEspecifico) :
                new ObjectParameter("IdUsoEspecifico", typeof(string));
    
            var paisParameter = pais.HasValue ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(int));
    
            var tipoInmuebleParameter = tipoInmueble.HasValue ?
                new ObjectParameter("TipoInmueble", tipoInmueble) :
                new ObjectParameter("TipoInmueble", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spuSelecInformacionRusp", fechaInicioParameter, fechaFinParameter, sectorParameter, institucionParameter, estatusInmuebleParameter, ramoParameter, uRParameter, rFIRIUFParameter, estadoParameter, estatusAprovechamientoParameter, idUsoGenericoParameter, idUsoEspecificoParameter, paisParameter, tipoInmuebleParameter);
        }
    
        public virtual ObjectResult<spuSelectAcuseContrato_Result> spuSelectAcuseContrato(Nullable<int> folioContrato)
        {
            var folioContratoParameter = folioContrato.HasValue ?
                new ObjectParameter("FolioContrato", folioContrato) :
                new ObjectParameter("FolioContrato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuSelectAcuseContrato_Result>("spuSelectAcuseContrato", folioContratoParameter);
        }
    
        public virtual ObjectResult<spuSelectAcuseEmisionOpinionXIdFolio_Result> spuSelectAcuseEmisionOpinionXIdFolio(Nullable<int> idFolioAplicacionCpto, string descripcionTipoArrendamiento)
        {
            var idFolioAplicacionCptoParameter = idFolioAplicacionCpto.HasValue ?
                new ObjectParameter("IdFolioAplicacionCpto", idFolioAplicacionCpto) :
                new ObjectParameter("IdFolioAplicacionCpto", typeof(int));
    
            var descripcionTipoArrendamientoParameter = descripcionTipoArrendamiento != null ?
                new ObjectParameter("DescripcionTipoArrendamiento", descripcionTipoArrendamiento) :
                new ObjectParameter("DescripcionTipoArrendamiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuSelectAcuseEmisionOpinionXIdFolio_Result>("spuSelectAcuseEmisionOpinionXIdFolio", idFolioAplicacionCptoParameter, descripcionTipoArrendamientoParameter);
        }
    
        public virtual ObjectResult<spuSelectAcuseSMOI_Result> spuSelectAcuseSMOI(Nullable<int> idFolioAplicacionCpto)
        {
            var idFolioAplicacionCptoParameter = idFolioAplicacionCpto.HasValue ?
                new ObjectParameter("IdFolioAplicacionCpto", idFolioAplicacionCpto) :
                new ObjectParameter("IdFolioAplicacionCpto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuSelectAcuseSMOI_Result>("spuSelectAcuseSMOI", idFolioAplicacionCptoParameter);
        }
    
        public virtual ObjectResult<spuSelectConceptosXResponderSMOI_Result> spuSelectConceptosXResponderSMOI(Nullable<byte> idTema, Nullable<int> idInstitucion)
        {
            var idTemaParameter = idTema.HasValue ?
                new ObjectParameter("IdTema", idTema) :
                new ObjectParameter("IdTema", typeof(byte));
    
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuSelectConceptosXResponderSMOI_Result>("spuSelectConceptosXResponderSMOI", idTemaParameter, idInstitucionParameter);
        }
    
        public virtual ObjectResult<spuSelectConceptosXResponderTema_Result> spuSelectConceptosXResponderTema(Nullable<byte> idTema, Nullable<int> idInstitucion)
        {
            var idTemaParameter = idTema.HasValue ?
                new ObjectParameter("IdTema", idTema) :
                new ObjectParameter("IdTema", typeof(byte));
    
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuSelectConceptosXResponderTema_Result>("spuSelectConceptosXResponderTema", idTemaParameter, idInstitucionParameter);
        }
    
        public virtual ObjectResult<spuSelectContratoArrto_Result> spuSelectContratoArrto(Nullable<int> idInstitucion, Nullable<int> folioContratoArrto, Nullable<byte> tipoContrato)
        {
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            var folioContratoArrtoParameter = folioContratoArrto.HasValue ?
                new ObjectParameter("FolioContratoArrto", folioContratoArrto) :
                new ObjectParameter("FolioContratoArrto", typeof(int));
    
            var tipoContratoParameter = tipoContrato.HasValue ?
                new ObjectParameter("TipoContrato", tipoContrato) :
                new ObjectParameter("TipoContrato", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuSelectContratoArrto_Result>("spuSelectContratoArrto", idInstitucionParameter, folioContratoArrtoParameter, tipoContratoParameter);
        }
    
        public virtual ObjectResult<spuSelectContratosHistoricoXInstitucionEdoMpo_Result> spuSelectContratosHistoricoXInstitucionEdoMpo(Nullable<int> idInstitucionDBCAT, Nullable<byte> idEstadoDBCAT, string nombreMunicipioDBCAT)
        {
            var idInstitucionDBCATParameter = idInstitucionDBCAT.HasValue ?
                new ObjectParameter("IdInstitucionDBCAT", idInstitucionDBCAT) :
                new ObjectParameter("IdInstitucionDBCAT", typeof(int));
    
            var idEstadoDBCATParameter = idEstadoDBCAT.HasValue ?
                new ObjectParameter("IdEstadoDBCAT", idEstadoDBCAT) :
                new ObjectParameter("IdEstadoDBCAT", typeof(byte));
    
            var nombreMunicipioDBCATParameter = nombreMunicipioDBCAT != null ?
                new ObjectParameter("NombreMunicipioDBCAT", nombreMunicipioDBCAT) :
                new ObjectParameter("NombreMunicipioDBCAT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuSelectContratosHistoricoXInstitucionEdoMpo_Result>("spuSelectContratosHistoricoXInstitucionEdoMpo", idInstitucionDBCATParameter, idEstadoDBCATParameter, nombreMunicipioDBCATParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spuSelectCountInmueblesXIdInstitucion(Nullable<int> idInstitucion)
        {
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spuSelectCountInmueblesXIdInstitucion", idInstitucionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spuSelectCountSolicitudesSMOIXIdInstitucion(Nullable<int> idInstitucion)
        {
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spuSelectCountSolicitudesSMOIXIdInstitucion", idInstitucionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spuSelectCountUsoFolioSMOIenOpionion(Nullable<int> idFolioAplicacionCpto, Nullable<int> idInstitucion)
        {
            var idFolioAplicacionCptoParameter = idFolioAplicacionCpto.HasValue ?
                new ObjectParameter("IdFolioAplicacionCpto", idFolioAplicacionCpto) :
                new ObjectParameter("IdFolioAplicacionCpto", typeof(int));
    
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spuSelectCountUsoFolioSMOIenOpionion", idFolioAplicacionCptoParameter, idInstitucionParameter);
        }
    
        public virtual ObjectResult<spuSelectDatosAPartirDelFolioContrato_Result> spuSelectDatosAPartirDelFolioContrato(Nullable<int> folioContratoArrto)
        {
            var folioContratoArrtoParameter = folioContratoArrto.HasValue ?
                new ObjectParameter("FolioContratoArrto", folioContratoArrto) :
                new ObjectParameter("FolioContratoArrto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuSelectDatosAPartirDelFolioContrato_Result>("spuSelectDatosAPartirDelFolioContrato", folioContratoArrtoParameter);
        }
    
        public virtual ObjectResult<spuSelectEstadoMpoXIdInmuebleArrto_Result> spuSelectEstadoMpoXIdInmuebleArrto(Nullable<int> idInmuebleArrendamiento)
        {
            var idInmuebleArrendamientoParameter = idInmuebleArrendamiento.HasValue ?
                new ObjectParameter("IdInmuebleArrendamiento", idInmuebleArrendamiento) :
                new ObjectParameter("IdInmuebleArrendamiento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuSelectEstadoMpoXIdInmuebleArrto_Result>("spuSelectEstadoMpoXIdInmuebleArrto", idInmuebleArrendamientoParameter);
        }
    
        public virtual ObjectResult<spuSelectExcepcionNormativaContratoArrto_Result> spuSelectExcepcionNormativaContratoArrto(Nullable<int> idInstitucion, Nullable<int> folioContratoArrto, Nullable<byte> tipoContrato)
        {
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            var folioContratoArrtoParameter = folioContratoArrto.HasValue ?
                new ObjectParameter("FolioContratoArrto", folioContratoArrto) :
                new ObjectParameter("FolioContratoArrto", typeof(int));
    
            var tipoContratoParameter = tipoContrato.HasValue ?
                new ObjectParameter("TipoContrato", tipoContrato) :
                new ObjectParameter("TipoContrato", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuSelectExcepcionNormativaContratoArrto_Result>("spuSelectExcepcionNormativaContratoArrto", idInstitucionParameter, folioContratoArrtoParameter, tipoContratoParameter);
        }
    
        public virtual ObjectResult<string> spuSelectExcepcionNormatividadPreviaContrato(Nullable<byte> tipoContrato, Nullable<decimal> areaOcupadaM2, Nullable<decimal> rentaMensualUnitaria, Nullable<int> folioEmisionOpinion, string superficieDictaminada_Justipreciacion, Nullable<decimal> montoDictaminado_Justipreciacion, string numeroDictamenExcepcionFolioSMOI)
        {
            var tipoContratoParameter = tipoContrato.HasValue ?
                new ObjectParameter("TipoContrato", tipoContrato) :
                new ObjectParameter("TipoContrato", typeof(byte));
    
            var areaOcupadaM2Parameter = areaOcupadaM2.HasValue ?
                new ObjectParameter("AreaOcupadaM2", areaOcupadaM2) :
                new ObjectParameter("AreaOcupadaM2", typeof(decimal));
    
            var rentaMensualUnitariaParameter = rentaMensualUnitaria.HasValue ?
                new ObjectParameter("RentaMensualUnitaria", rentaMensualUnitaria) :
                new ObjectParameter("RentaMensualUnitaria", typeof(decimal));
    
            var folioEmisionOpinionParameter = folioEmisionOpinion.HasValue ?
                new ObjectParameter("FolioEmisionOpinion", folioEmisionOpinion) :
                new ObjectParameter("FolioEmisionOpinion", typeof(int));
    
            var superficieDictaminada_JustipreciacionParameter = superficieDictaminada_Justipreciacion != null ?
                new ObjectParameter("SuperficieDictaminada_Justipreciacion", superficieDictaminada_Justipreciacion) :
                new ObjectParameter("SuperficieDictaminada_Justipreciacion", typeof(string));
    
            var montoDictaminado_JustipreciacionParameter = montoDictaminado_Justipreciacion.HasValue ?
                new ObjectParameter("MontoDictaminado_Justipreciacion", montoDictaminado_Justipreciacion) :
                new ObjectParameter("MontoDictaminado_Justipreciacion", typeof(decimal));
    
            var numeroDictamenExcepcionFolioSMOIParameter = numeroDictamenExcepcionFolioSMOI != null ?
                new ObjectParameter("NumeroDictamenExcepcionFolioSMOI", numeroDictamenExcepcionFolioSMOI) :
                new ObjectParameter("NumeroDictamenExcepcionFolioSMOI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spuSelectExcepcionNormatividadPreviaContrato", tipoContratoParameter, areaOcupadaM2Parameter, rentaMensualUnitariaParameter, folioEmisionOpinionParameter, superficieDictaminada_JustipreciacionParameter, montoDictaminado_JustipreciacionParameter, numeroDictamenExcepcionFolioSMOIParameter);
        }
    
        public virtual ObjectResult<spuSelectInmuebleArrtoXId_Result> spuSelectInmuebleArrtoXId(Nullable<int> idInmuebleArrendamiento)
        {
            var idInmuebleArrendamientoParameter = idInmuebleArrendamiento.HasValue ?
                new ObjectParameter("IdInmuebleArrendamiento", idInmuebleArrendamiento) :
                new ObjectParameter("IdInmuebleArrendamiento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuSelectInmuebleArrtoXId_Result>("spuSelectInmuebleArrtoXId", idInmuebleArrendamientoParameter);
        }
    
        public virtual ObjectResult<spuSelectInmuebles_Result> spuSelectInmuebles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuSelectInmuebles_Result>("spuSelectInmuebles");
        }
    
        public virtual int spuSelectMvtosContratosParaInmueblesArrto(Nullable<int> otrasFiguras, Nullable<int> idInstitucion, Nullable<int> folioContratoArrto, Nullable<int> idPais, Nullable<int> idEstado, Nullable<int> idMunicipio, string rIUF)
        {
            var otrasFigurasParameter = otrasFiguras.HasValue ?
                new ObjectParameter("OtrasFiguras", otrasFiguras) :
                new ObjectParameter("OtrasFiguras", typeof(int));
    
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            var folioContratoArrtoParameter = folioContratoArrto.HasValue ?
                new ObjectParameter("FolioContratoArrto", folioContratoArrto) :
                new ObjectParameter("FolioContratoArrto", typeof(int));
    
            var idPaisParameter = idPais.HasValue ?
                new ObjectParameter("IdPais", idPais) :
                new ObjectParameter("IdPais", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            var idMunicipioParameter = idMunicipio.HasValue ?
                new ObjectParameter("IdMunicipio", idMunicipio) :
                new ObjectParameter("IdMunicipio", typeof(int));
    
            var rIUFParameter = rIUF != null ?
                new ObjectParameter("RIUF", rIUF) :
                new ObjectParameter("RIUF", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spuSelectMvtosContratosParaInmueblesArrto", otrasFigurasParameter, idInstitucionParameter, folioContratoArrtoParameter, idPaisParameter, idEstadoParameter, idMunicipioParameter, rIUFParameter);
        }
    
        public virtual ObjectResult<spuSelectMvtosEmisionOpinionParaInmueblesArrto_Result> spuSelectMvtosEmisionOpinionParaInmueblesArrto(Nullable<int> idInstitucion, Nullable<int> folioAplicacionConcepto, Nullable<int> idEstado, Nullable<int> idMunicipio, Nullable<int> folioSMOI, Nullable<int> folioSAEF)
        {
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            var folioAplicacionConceptoParameter = folioAplicacionConcepto.HasValue ?
                new ObjectParameter("FolioAplicacionConcepto", folioAplicacionConcepto) :
                new ObjectParameter("FolioAplicacionConcepto", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            var idMunicipioParameter = idMunicipio.HasValue ?
                new ObjectParameter("IdMunicipio", idMunicipio) :
                new ObjectParameter("IdMunicipio", typeof(int));
    
            var folioSMOIParameter = folioSMOI.HasValue ?
                new ObjectParameter("FolioSMOI", folioSMOI) :
                new ObjectParameter("FolioSMOI", typeof(int));
    
            var folioSAEFParameter = folioSAEF.HasValue ?
                new ObjectParameter("FolioSAEF", folioSAEF) :
                new ObjectParameter("FolioSAEF", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuSelectMvtosEmisionOpinionParaInmueblesArrto_Result>("spuSelectMvtosEmisionOpinionParaInmueblesArrto", idInstitucionParameter, folioAplicacionConceptoParameter, idEstadoParameter, idMunicipioParameter, folioSMOIParameter, folioSAEFParameter);
        }
    
        public virtual int spuSelectReporteInmuebles(Nullable<int> idInstitucion, string fechaRInicial, string fechaRFinal, string fechaIInicial, string fechaIFinal, string fechaFInicial, string fechaFFinal, Nullable<int> idTipoContrato, Nullable<int> idTipoOcupacion)
        {
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            var fechaRInicialParameter = fechaRInicial != null ?
                new ObjectParameter("FechaRInicial", fechaRInicial) :
                new ObjectParameter("FechaRInicial", typeof(string));
    
            var fechaRFinalParameter = fechaRFinal != null ?
                new ObjectParameter("FechaRFinal", fechaRFinal) :
                new ObjectParameter("FechaRFinal", typeof(string));
    
            var fechaIInicialParameter = fechaIInicial != null ?
                new ObjectParameter("FechaIInicial", fechaIInicial) :
                new ObjectParameter("FechaIInicial", typeof(string));
    
            var fechaIFinalParameter = fechaIFinal != null ?
                new ObjectParameter("FechaIFinal", fechaIFinal) :
                new ObjectParameter("FechaIFinal", typeof(string));
    
            var fechaFInicialParameter = fechaFInicial != null ?
                new ObjectParameter("FechaFInicial", fechaFInicial) :
                new ObjectParameter("FechaFInicial", typeof(string));
    
            var fechaFFinalParameter = fechaFFinal != null ?
                new ObjectParameter("FechaFFinal", fechaFFinal) :
                new ObjectParameter("FechaFFinal", typeof(string));
    
            var idTipoContratoParameter = idTipoContrato.HasValue ?
                new ObjectParameter("IdTipoContrato", idTipoContrato) :
                new ObjectParameter("IdTipoContrato", typeof(int));
    
            var idTipoOcupacionParameter = idTipoOcupacion.HasValue ?
                new ObjectParameter("IdTipoOcupacion", idTipoOcupacion) :
                new ObjectParameter("IdTipoOcupacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spuSelectReporteInmuebles", idInstitucionParameter, fechaRInicialParameter, fechaRFinalParameter, fechaIInicialParameter, fechaIFinalParameter, fechaFInicialParameter, fechaFFinalParameter, idTipoContratoParameter, idTipoOcupacionParameter);
        }
    
        public virtual int spuSelectReporteInmueblesTodos(Nullable<int> idInstitucion, string fechaRInicial, string fechaRFinal, string fechaIInicial, string fechaIFinal, string fechaFInicial, string fechaFFinal, Nullable<int> idTipoContrato, Nullable<int> idTipoOcupacion)
        {
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            var fechaRInicialParameter = fechaRInicial != null ?
                new ObjectParameter("FechaRInicial", fechaRInicial) :
                new ObjectParameter("FechaRInicial", typeof(string));
    
            var fechaRFinalParameter = fechaRFinal != null ?
                new ObjectParameter("FechaRFinal", fechaRFinal) :
                new ObjectParameter("FechaRFinal", typeof(string));
    
            var fechaIInicialParameter = fechaIInicial != null ?
                new ObjectParameter("FechaIInicial", fechaIInicial) :
                new ObjectParameter("FechaIInicial", typeof(string));
    
            var fechaIFinalParameter = fechaIFinal != null ?
                new ObjectParameter("FechaIFinal", fechaIFinal) :
                new ObjectParameter("FechaIFinal", typeof(string));
    
            var fechaFInicialParameter = fechaFInicial != null ?
                new ObjectParameter("FechaFInicial", fechaFInicial) :
                new ObjectParameter("FechaFInicial", typeof(string));
    
            var fechaFFinalParameter = fechaFFinal != null ?
                new ObjectParameter("FechaFFinal", fechaFFinal) :
                new ObjectParameter("FechaFFinal", typeof(string));
    
            var idTipoContratoParameter = idTipoContrato.HasValue ?
                new ObjectParameter("IdTipoContrato", idTipoContrato) :
                new ObjectParameter("IdTipoContrato", typeof(int));
    
            var idTipoOcupacionParameter = idTipoOcupacion.HasValue ?
                new ObjectParameter("IdTipoOcupacion", idTipoOcupacion) :
                new ObjectParameter("IdTipoOcupacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spuSelectReporteInmueblesTodos", idInstitucionParameter, fechaRInicialParameter, fechaRFinalParameter, fechaIInicialParameter, fechaIFinalParameter, fechaFInicialParameter, fechaFFinalParameter, idTipoContratoParameter, idTipoOcupacionParameter);
        }
    
        public virtual ObjectResult<string> spuSelectResultadoEmisionOpinion(Nullable<int> folioEmision, Nullable<byte> idTema)
        {
            var folioEmisionParameter = folioEmision.HasValue ?
                new ObjectParameter("FolioEmision", folioEmision) :
                new ObjectParameter("FolioEmision", typeof(int));
    
            var idTemaParameter = idTema.HasValue ?
                new ObjectParameter("IdTema", idTema) :
                new ObjectParameter("IdTema", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spuSelectResultadoEmisionOpinion", folioEmisionParameter, idTemaParameter);
        }
    
        public virtual ObjectResult<spuSelectSolicitudesEmisionOpinionEmitidas_Result> spuSelectSolicitudesEmisionOpinionEmitidas(Nullable<int> idInstitucion, Nullable<int> folioAplicacionConcepto, Nullable<byte> idTema, Nullable<int> folioSAEF)
        {
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            var folioAplicacionConceptoParameter = folioAplicacionConcepto.HasValue ?
                new ObjectParameter("FolioAplicacionConcepto", folioAplicacionConcepto) :
                new ObjectParameter("FolioAplicacionConcepto", typeof(int));
    
            var idTemaParameter = idTema.HasValue ?
                new ObjectParameter("IdTema", idTema) :
                new ObjectParameter("IdTema", typeof(byte));
    
            var folioSAEFParameter = folioSAEF.HasValue ?
                new ObjectParameter("FolioSAEF", folioSAEF) :
                new ObjectParameter("FolioSAEF", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuSelectSolicitudesEmisionOpinionEmitidas_Result>("spuSelectSolicitudesEmisionOpinionEmitidas", idInstitucionParameter, folioAplicacionConceptoParameter, idTemaParameter, folioSAEFParameter);
        }
    
        public virtual ObjectResult<spuSelectSolicitudesSMOIEmitidas_Result> spuSelectSolicitudesSMOIEmitidas(Nullable<int> idInstitucion, Nullable<int> folioAplicacionConcepto)
        {
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            var folioAplicacionConceptoParameter = folioAplicacionConcepto.HasValue ?
                new ObjectParameter("FolioAplicacionConcepto", folioAplicacionConcepto) :
                new ObjectParameter("FolioAplicacionConcepto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuSelectSolicitudesSMOIEmitidas_Result>("spuSelectSolicitudesSMOIEmitidas", idInstitucionParameter, folioAplicacionConceptoParameter);
        }
    
        public virtual ObjectResult<spuSelectTotalSMOIxFolioOpinion_Result> spuSelectTotalSMOIxFolioOpinion(Nullable<int> folioEmisionOpinion, Nullable<int> idInstitucion)
        {
            var folioEmisionOpinionParameter = folioEmisionOpinion.HasValue ?
                new ObjectParameter("FolioEmisionOpinion", folioEmisionOpinion) :
                new ObjectParameter("FolioEmisionOpinion", typeof(int));
    
            var idInstitucionParameter = idInstitucion.HasValue ?
                new ObjectParameter("IdInstitucion", idInstitucion) :
                new ObjectParameter("IdInstitucion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spuSelectTotalSMOIxFolioOpinion_Result>("spuSelectTotalSMOIxFolioOpinion", folioEmisionOpinionParameter, idInstitucionParameter);
        }
    
        public virtual int spuUpdateDesctivarAplicacionConceptoFinVigencia()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spuUpdateDesctivarAplicacionConceptoFinVigencia");
        }
    
        public virtual int spuUpdateInmuebleArrendamiento(Nullable<int> idInmuebleArrendamiento, string nombrePais, Nullable<int> fk_IdPais, Nullable<int> fk_IdEstado, Nullable<int> fk_IdMunicipio, Nullable<int> fk_IdLocalidad, Nullable<int> fk_IdTipoVialidad, string nombreVialidad, string numExterior, string numInterior, string codigoPostal, Nullable<decimal> geoRefLatitud, Nullable<decimal> geoRefLongitud, string nombreInmueble, string codigoPostal_Extranjero, string estado_Extranjero, string ciudad_Extranjero, string municipio_Extranjero, Nullable<int> fk_IdUsuarioRegistro, Nullable<bool> estatusRegistro)
        {
            var idInmuebleArrendamientoParameter = idInmuebleArrendamiento.HasValue ?
                new ObjectParameter("IdInmuebleArrendamiento", idInmuebleArrendamiento) :
                new ObjectParameter("IdInmuebleArrendamiento", typeof(int));
    
            var nombrePaisParameter = nombrePais != null ?
                new ObjectParameter("NombrePais", nombrePais) :
                new ObjectParameter("NombrePais", typeof(string));
    
            var fk_IdPaisParameter = fk_IdPais.HasValue ?
                new ObjectParameter("Fk_IdPais", fk_IdPais) :
                new ObjectParameter("Fk_IdPais", typeof(int));
    
            var fk_IdEstadoParameter = fk_IdEstado.HasValue ?
                new ObjectParameter("Fk_IdEstado", fk_IdEstado) :
                new ObjectParameter("Fk_IdEstado", typeof(int));
    
            var fk_IdMunicipioParameter = fk_IdMunicipio.HasValue ?
                new ObjectParameter("Fk_IdMunicipio", fk_IdMunicipio) :
                new ObjectParameter("Fk_IdMunicipio", typeof(int));
    
            var fk_IdLocalidadParameter = fk_IdLocalidad.HasValue ?
                new ObjectParameter("Fk_IdLocalidad", fk_IdLocalidad) :
                new ObjectParameter("Fk_IdLocalidad", typeof(int));
    
            var fk_IdTipoVialidadParameter = fk_IdTipoVialidad.HasValue ?
                new ObjectParameter("Fk_IdTipoVialidad", fk_IdTipoVialidad) :
                new ObjectParameter("Fk_IdTipoVialidad", typeof(int));
    
            var nombreVialidadParameter = nombreVialidad != null ?
                new ObjectParameter("NombreVialidad", nombreVialidad) :
                new ObjectParameter("NombreVialidad", typeof(string));
    
            var numExteriorParameter = numExterior != null ?
                new ObjectParameter("NumExterior", numExterior) :
                new ObjectParameter("NumExterior", typeof(string));
    
            var numInteriorParameter = numInterior != null ?
                new ObjectParameter("NumInterior", numInterior) :
                new ObjectParameter("NumInterior", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var geoRefLatitudParameter = geoRefLatitud.HasValue ?
                new ObjectParameter("GeoRefLatitud", geoRefLatitud) :
                new ObjectParameter("GeoRefLatitud", typeof(decimal));
    
            var geoRefLongitudParameter = geoRefLongitud.HasValue ?
                new ObjectParameter("GeoRefLongitud", geoRefLongitud) :
                new ObjectParameter("GeoRefLongitud", typeof(decimal));
    
            var nombreInmuebleParameter = nombreInmueble != null ?
                new ObjectParameter("NombreInmueble", nombreInmueble) :
                new ObjectParameter("NombreInmueble", typeof(string));
    
            var codigoPostal_ExtranjeroParameter = codigoPostal_Extranjero != null ?
                new ObjectParameter("CodigoPostal_Extranjero", codigoPostal_Extranjero) :
                new ObjectParameter("CodigoPostal_Extranjero", typeof(string));
    
            var estado_ExtranjeroParameter = estado_Extranjero != null ?
                new ObjectParameter("Estado_Extranjero", estado_Extranjero) :
                new ObjectParameter("Estado_Extranjero", typeof(string));
    
            var ciudad_ExtranjeroParameter = ciudad_Extranjero != null ?
                new ObjectParameter("Ciudad_Extranjero", ciudad_Extranjero) :
                new ObjectParameter("Ciudad_Extranjero", typeof(string));
    
            var municipio_ExtranjeroParameter = municipio_Extranjero != null ?
                new ObjectParameter("Municipio_Extranjero", municipio_Extranjero) :
                new ObjectParameter("Municipio_Extranjero", typeof(string));
    
            var fk_IdUsuarioRegistroParameter = fk_IdUsuarioRegistro.HasValue ?
                new ObjectParameter("Fk_IdUsuarioRegistro", fk_IdUsuarioRegistro) :
                new ObjectParameter("Fk_IdUsuarioRegistro", typeof(int));
    
            var estatusRegistroParameter = estatusRegistro.HasValue ?
                new ObjectParameter("EstatusRegistro", estatusRegistro) :
                new ObjectParameter("EstatusRegistro", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spuUpdateInmuebleArrendamiento", idInmuebleArrendamientoParameter, nombrePaisParameter, fk_IdPaisParameter, fk_IdEstadoParameter, fk_IdMunicipioParameter, fk_IdLocalidadParameter, fk_IdTipoVialidadParameter, nombreVialidadParameter, numExteriorParameter, numInteriorParameter, codigoPostalParameter, geoRefLatitudParameter, geoRefLongitudParameter, nombreInmuebleParameter, codigoPostal_ExtranjeroParameter, estado_ExtranjeroParameter, ciudad_ExtranjeroParameter, municipio_ExtranjeroParameter, fk_IdUsuarioRegistroParameter, estatusRegistroParameter);
        }
    
        public virtual ObjectResult<usp_ActualizarRIUF_Result> usp_ActualizarRIUF(string rIUF, Nullable<int> folio)
        {
            var rIUFParameter = rIUF != null ?
                new ObjectParameter("RIUF", rIUF) :
                new ObjectParameter("RIUF", typeof(string));
    
            var folioParameter = folio.HasValue ?
                new ObjectParameter("Folio", folio) :
                new ObjectParameter("Folio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ActualizarRIUF_Result>("usp_ActualizarRIUF", rIUFParameter, folioParameter);
        }
    }
}
